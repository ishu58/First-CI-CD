parameters:
- name: EnvironmentName
  type: string
  default: ''
- name: IISApplicationName
  type: string
  default: ''
- name: AppPoolName
  type: string
  default: ''
- name: IISWebSiteName
  type: string
  default: ''
- name: WebsitePhysicalPath
  type: string
  default: ''
- name: VirtualPathForApplication
  type: string
  default: ''
- name: PhysicalPathForApplication
  type: string
  default: ''
- name: AppPoolUsername
  type: string
  default: ''
- name: AppPoolPassword
  type: string
  default: ''
- name: ServerTagName
  type: string
  default: ''
- name: ArtifactName
  type: string
  default: 'drop'
- name: DependsOn
  type: object
  default: []
- name: OutputName
  type: string
  default: ''
- name: HealthChecksUrl
  type: string
  default: ''

jobs:
  - deployment: DeployWebApplication
    displayName: Deploy Web Application
    dependsOn: ${{ parameters.DependsOn }}
    variables:
      Release.EnvironmentName: ${{ parameters.EnvironmentName }}
    environment:
      name: ${{ parameters.EnvironmentName }}
      resourceType: VirtualMachine
      tags: ${{ parameters.ServerTagName }}
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - download: current
              displayName: Download Web Application Artifact
              artifact: ${{ parameters.ArtifactName }}

            - task: ExtractFiles@1
              displayName: Unzip Deployment Payload
              inputs:
                archiveFilePatterns: '$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)${{ parameters.OutputName }}.zip'
                destinationFolder: '$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)${{ parameters.OutputName }}'

            - task: qetza.replacetokens.replacetokens-task.replacetokens@3
              displayName: 'Replace tokens'
              inputs:
                targetFiles: |
                  $(Agent.BuildDirectory)\drop\$(Build.BuildNumber)${{ parameters.OutputName }}\appsettings-release.json

            - task: PowerShell@2
              displayName: Replace appsettings.json with appsettings-release.json
              inputs:
                targetType: inline
                pwsh: true
                script: |
                  Rename-Item -Path "$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)${{ parameters.OutputName }}\appsettings.json" -NewName "$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)${{ parameters.OutputName }}\appsettings-initial.json"
                  Rename-Item -Path "$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)${{ parameters.OutputName }}\appsettings-release.json" -NewName "$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)${{ parameters.OutputName }}\appsettings.json"

            - task: IISWebAppManagementOnMachineGroup@0
              displayName: Create or Update Application Pool
              inputs:
                IISDeploymentType: 'IISApplicationPool'
                ActionIISApplicationPool: 'CreateOrUpdateAppPool'
                AppPoolIdentity: 'SpecificUser'
                AppPoolUsername: ${{ parameters.AppPoolUsername }}
                AppPoolPassword: ${{ parameters.AppPoolPassword }}
                DotNetVersion: 'v4.0'
                AppPoolName: ${{ parameters.AppPoolName }}
                PipeLineMode: Integrated

            - task: IISWebAppManagementOnMachineGroup@0
              displayName: Stop Application Pool
              inputs:
                IISDeploymentType: 'IISApplicationPool'
                ActionIISApplicationPool: 'StopAppPool'
                StartStopRecycleAppPoolName: ${{ parameters.AppPoolName }}

            - task: IISWebAppDeploymentOnMachineGroup@0
              displayName: Create or Update Web Application
              inputs:
                IISDeploymentType: IISWebApplication
                ActionIISWebsite: CreateOrUpdateWebsite
                WebsiteName: ${{ parameters.IISWebSiteName }}
                WebsitePhysicalPath: ${{ parameters.WebsitePhysicalPath }}
                AddBinding: false
                VirtualApplication: ${{ parameters.IISApplicationName }}
                VirtualPathForApplication: ${{ parameters.VirtualPathForApplication }}
                ParentWebsiteNameForApplication: ${{ parameters.IISWebSiteName }}
                PhysicalPathForApplication: ${{ parameters.PhysicalPathForApplication }}
                AppPoolNameForApplication: ${{ parameters.AppPoolName }}
                AppPoolIdentityForApplication: SpecificUser
                AppPoolUsernameForApplication: ${{ parameters.AppPoolUsername }}
                AppPoolPasswordForApplication: ${{ parameters.AppPoolPassword }}
                PipeLineModeForApplication: Integrated
                DotNetVersionForApplication: 'v4.0'
                CreateOrUpdateAppPoolForApplication: true
                Package: '$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)${{ parameters.OutputName }}\'
                jSONFiles: '**/appsettings.json'

            - task: IISWebAppManagementOnMachineGroup@0
              displayName: Start Application Pool
              inputs:
                IISDeploymentType: 'IISApplicationPool'
                ActionIISApplicationPool: 'StartAppPool'
                StartStopRecycleAppPoolName: '${{ parameters.AppPoolName }}'

            - task: PowerShell@2
              displayName: Apply Retention Policy
              inputs:
                targetType: inline
                script: |
                  Remove-Item '$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)${{ parameters.OutputName }}.zip' -Force -Recurse;
                  Remove-Item '$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)${{ parameters.OutputName }}\' -Force -Recurse;

            - template: ../tasks/perform-healthcheck-webapi.yml
              parameters:
                url: ${{ parameters.HealthChecksUrl }}
