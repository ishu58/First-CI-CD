parameters:
- name: EnvironmentName
  type: string
- name: IISApplicationName
  type: string
- name: IISWebSiteName
  type: string
- name: ArtifactName
  type: string
  default: 'drop'
- name: TargetHost
  type: string
- name: RemoteUserName
  type: string
- name: RemoteUserPassword
  type: string
- name: WebRootFolderPath
  type: string
- name: WebRootFolderUNCPath
  type: string
- name: HealthChecksUrl
  type: string
  default: ''

jobs:
  - deployment: DeployWebApplication
    displayName: Deploy Web Application
    environment: ${{ parameters.EnvironmentName }}
    strategy:
      runOnce:
        deploy:
          steps:
            - download: current
              displayName: Download Web Application Artifact
              artifact: ${{ parameters.ArtifactName }}

            - task: ExtractFiles@1
              displayName: Unzip Deployment Payload
              inputs:
                archiveFilePatterns: '$(Agent.BuildDirectory)\drop\$(Build.BuildNumber).zip'
                destinationFolder: '${{ parameters.WebRootFolderPath }}'

            - task: PowerShellOnTargetMachines@3
              displayName: Deploy Web Application
              inputs:
                Machines: ${{ parameters.TargetHost }}
                UserName: ${{ parameters.RemoteUserName }}
                UserPassword: ${{ parameters.RemoteUserPassword }}
                CommunicationProtocol: 'Http'
                ScriptType: 'Inline'
                InlineScript: |
                  Import-Module WebAdministration
                  Write-Output "Deploying application: ${{ parameters.IISApplicationName }}"

                  if (Test-Path IIS:\Sites\${{ parameters.IISWebSiteName }}\${{ parameters.IISApplicationName }}) {
                      Remove-WebApplication -Name ${{ parameters.IISApplicationName }} -Site ${{ parameters.IISWebSiteName }}
                  }

                  New-WebApplication -Name "${{ parameters.IISApplicationName }}" -Site "${{ parameters.IISWebSiteName }}" -PhysicalPath "${{ parameters.WebRootFolderPath }}" -Force
                  Write-Output "Deployment successful!"

            - ${{ if ne('${{ parameters.HealthChecksUrl }}', '') }}:
              - script: curl -f ${{ parameters.HealthChecksUrl }}
                displayName: Health Check
